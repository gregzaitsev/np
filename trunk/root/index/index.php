<?php

function error_handler( $errno, $errstr, $errfile, $errline ) {

	sm_debug::write("Error: errstr: $errstr, errno: $errno, errfile: $errfile, errline: $errline", 1);
	file_put_contents( dirname(__FILE__).'/err', $errno."\n".$errstr."\n".$errfile."\n".$errline );
	
	return true;
	
} // function error_handler()

set_error_handler( "error_handler",  E_ALL );

/**
 * Function of classes autoloading
 * 
 * @param string $class - class name
 */
function __autoload( $class ) {

    $parts = explode( "_", $class );
    $suffix = "class";

    if( count( $parts ) < 2 ) {
        trigger_error( "Cannot load class ".$class );
    }

    if( !in_array( $parts[0], array("ent", "atm", "sm") ) ) {
        trigger_error( "Cannot load class ".$class );
    }

    $path = join( '/', $parts );
    $class = join( "_", $parts ).".$suffix.php";
    $file = dirname( __FILE__ ).'/../../'.$path.'/'.$class;

    if( !file_exists( $file ) ) {
		echo "cannot find $file<br>";
		sm_config::show404();
    }

    require_once( $file );

} // function __autoload()

// Set project root (not same as DOCUMENT_ROOT!)
sm_config::$root = realpath(dirname( __FILE__ ).'/../../');

// Parse REQUEST_URI for IIS
$_SERVER["REQUEST_URI"] = preg_replace( "/(.*)\?40[34];http[s]?:\/\/(.*)/", "$2", $_SERVER["REQUEST_URI"] );

// Parse ATM/ACP name
$main_part = explode( '?', $_SERVER['REQUEST_URI']);
$parts = explode( '/', rtrim( $main_part[0], '/' ) );

// All debug logs generated by this request will contain a unique numeric identifier (made
// from the request_uri and request_time. This helps us to tell AJAX-related actions apart
// from POST-related actions.
sm_debug::setDebugTransId($_SERVER['REQUEST_URI']);

sm_config::$atm        = "atm_".( isset($parts[1]) ? $parts[1] : "default" );
sm_config::$acp        = (isset( $parts[2] ) ? $parts[2] : '');
sm_config::$parameters = array_splice( $parts, 3 );

// Invoke corresponded ACP

$tmp1 = $_SERVER["REQUEST_URI"];
sm_debug::write("Index file request: $tmp1", 5);
$atm = new sm_config::$atm( sm_config::$acp, sm_config::$parameters );

?>
